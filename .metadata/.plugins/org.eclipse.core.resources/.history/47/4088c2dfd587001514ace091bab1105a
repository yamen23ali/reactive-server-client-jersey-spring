package com.example;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Response;

import org.glassfish.jersey.client.rx.Rx;
import org.glassfish.jersey.client.rx.rxjava.RxObservable;
import org.glassfish.jersey.client.rx.rxjava.RxObservableInvoker;

import rx.Observable;
import rx.Observer;
import rx.Scheduler;
import rx.schedulers.Schedulers;

public class AsynCalls 
{

    private String URL = "http://localhost:8005";
    private String path = "/api/server?test=11";
    
    WebTarget webTarget; 
    
    public AsynCalls()
    {
    	Client client = ClientBuilder.newClient();
    	webTarget = client.target( URL ).path( path ); 
    }
    
    public void makeCall()
    {
    	/*Observable<Response> result = RxObservable.from (webTarget ).path("recommended").request()
    	        .header("Rx-User", "RxJava")
    	        .rx()
    	        .get();*./
    	/*Observable<Response> result =  RxObservable.newClient(RxObservableInvoker.class)
        .target("http://localhost:8005/api/server?test=11")
        .request()
        .rx()
        .get(  );*/
    	
    	
    	
    	Observable<Response> response = Rx.newClient(RxObservableInvoker.class)
    	        .target("http://localhost:8005/api/server?test=11")
    	        .request()
    	        .rx()
    	        .get();
    }
    
    private Observable<Response> ff( Observable<Response> t)
    {
    	return t;
    }
    
}
